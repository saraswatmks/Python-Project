stages:
  - test
  - build
  - docker
  - pex-publish
  - db-sync
  - openshift-configmaps
  - openshift-deploy

variables:
  AWS_DEFAULT_REGION: "eu-west-1"
  GIT_SUBMODULE_STRATEGY: recursive
  AWS_REGION: eu-west-1


###########################
# Test
###########################

test:
  stage: test
  image: registry.naspersclassifieds.com/panamera/relevance/pnr-docker-images/python
  script:
  - make test

###########################
# Build Pex
###########################

build:
  stage: build
  image: registry.naspersclassifieds.com/panamera/relevance/pnr-docker-images/python
  script:
  - make build
  artifacts:
    paths:
      - target/*.pex

###########################
# Build Docker
###########################

docker-service:
  stage: docker
  image: docker:stable
  cache:
    key: "$CI_BUILD_REF_NAME"
  services:
  - docker:dind
  before_script:
  - export TAG=${CI_COMMIT_SHA::8}
  script:
  - docker login ${CI_REGISTRY} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  - docker build --tag ${CI_REGISTRY_IMAGE} .
  - docker tag ${CI_REGISTRY_IMAGE} ${CI_REGISTRY_IMAGE}:${TAG}
  - docker push ${CI_REGISTRY_IMAGE}:${TAG}
  - docker push ${CI_REGISTRY_IMAGE}:latest
  only:
    refs:
     - master
     - develop


## training Pex
.pex-publish: &pex-publish
  image: registry.naspersclassifieds.com/panamera/relevance/pnr-docker-images/aws-cli:latest
  stage: pex-publish
  script:
    - aws s3 cp target/vision_train.pex s3://stg-relevance-vision-eu-west-1/pipeline/pex/vision_train.pex
    - aws s3 cp config/train/${ENV}/vision_train.ini s3://stg-relevance-vision-eu-west-1/pipeline/pex/vision_train.ini
    - aws s3 cp scripts/prestart.sh s3://stg-relevance-vision-eu-west-1/pipeline/pex/prestart.sh


stg/pex-publish:
  <<: *pex-publish
  when: manual
  dependencies:
    - build
  variables:
    AWS_ACCESS_KEY_ID: ${HZ_AWS_ACCESS_KEY_ID_STG}
    AWS_SECRET_ACCESS_KEY: ${HZ_AWS_SECRET_ACCESS_KEY_STG}
    ENV: stg


## sync stg to prd bucket
db-sync:
  image: registry.naspersclassifieds.com/panamera/relevance/pnr-docker-images/aws-cli:latest
  stage: db-sync
  only:
    refs:
     - master
  script:
    - mkdir vision-db
    - export AWS_ACCESS_KEY_ID=$HZ_AWS_ACCESS_KEY_ID_STG
    - export AWS_SECRET_ACCESS_KEY=$HZ_AWS_SECRET_ACCESS_KEY_STG
    - aws s3 cp s3://stg-relevance-vision-eu-west-1/vision-db/current/vision.db vision-db/vision.db
    - export AWS_ACCESS_KEY_ID=$HZ_AWS_ACCESS_KEY_ID_PRD
    - export AWS_SECRET_ACCESS_KEY=$HZ_AWS_SECRET_ACCESS_KEY_PRD
    - aws s3 cp vision-db/vision.db s3://prd-pnr-ragnarok-models-eu-west-1/vision-db/vision.db



###########################
# Openshift Configmaps
###########################

.openshift-configmap: &openshift-configmap
  image: registry.naspersclassifieds.com/panamera/relevance/pnr-docker-images/openshift-deployer:latest
  stage: openshift-configmaps
  script:
    - env-oc create configmap vision --from-file=config/app/${ENV} --dry-run -o json > visionmap.json
    - env-oc create -f visionmap.json || true
    - env-oc replace -f visionmap.json
    - cat visionmap.json
  artifacts:
    paths:
      - visionmap.json

stg/eu-west-1/openshift-configmap:
  <<: *openshift-configmap
  only:
    refs:
     - develop
  variables:
    VERSION: latest
    ENV: stg
    REGION: eu-west-1
    APPNAME: vision
    NAMESPACE: relevance
    OPENSHIFT_TOKEN: ${OPENSHIFT_STG_EU_WEST_TOKEN}

prd/eu-west-1/openshift-configmap:
  <<: *openshift-configmap
  only:
    refs:
     - master
  variables:
    VERSION: latest
    ENV: prd
    REGION: eu-west-1
    APPNAME: vision
    NAMESPACE: relevance
    OPENSHIFT_TOKEN: ${OPENSHIFT_PRD_EU_WEST_TOKEN}

###########################
# Openshift Deploy
###########################

.openshift-deploy: &openshift-deploy
  image: registry.naspersclassifieds.com/panamera/relevance/pnr-docker-images/openshift-deployer:latest
  stage: openshift-deploy
  script:
    - deploy

stg/eu-west-1/openshift-deploy:
  <<: *openshift-deploy
  only:
    refs:
     - develop
  variables:
    VERSION: latest
    ENV: stg
    REGION: eu-west-1
    APPNAME: vision
    NAMESPACE: relevance
    OPENSHIFT_TOKEN: ${OPENSHIFT_STG_EU_WEST_TOKEN}


prd/eu-west-1/openshift-deploy:
  <<: *openshift-deploy
  only:
    refs:
     - master
  variables:
    VERSION: latest
    ENV: prd
    REGION: eu-west-1
    APPNAME: vision
    NAMESPACE: relevance
    OPENSHIFT_TOKEN: ${OPENSHIFT_PRD_EU_WEST_TOKEN}

